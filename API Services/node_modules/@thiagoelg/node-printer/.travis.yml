# env:
#   matrix:
#     - export NODE_VERSION="12"
# matrix:
#   fast_finish: true
# before_install:
#   - git clone --depth=1 https://github.com/creationix/nvm.git ./.nvm
#   - source ./.nvm/nvm.sh
#   - nvm install $NODE_VERSION 64
#   - echo $NODE_VERSION
#   - nvm use $NODE_VERSION
#   - if [ $TRAVIS_OS_NAME == "linux" ]; then
#       sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test;
#       sudo apt-get -qq update;
#       sudo apt-get -qq install g++-4.8 libc6-dev-i386 libcups2:i386 libcups2-dev:i386  linux-libc-dev linux-libc-dev:i386 gcc-4.8-multilib g++-4.8-multilib;
#       export CXX='g++-4.8';
#       sudo apt-get install -qq debhelper autotools-dev cups-ppdc libcups2-dev cups imagemagick ghostscript;
#     fi
#   - "export JOBS=4"
# before_script:
#   - git config --global user.name "Ion Lupascu"
#   - git config --global user.email ionlupascu@gmail.com
#   - npm ci

# Need S3 Upload for Artifacts
# addons:
#   artifacts:
#     debug: true
#     paths:
#     - ./build/stage/**/*.tar.gz


# os:
#   - linux
#   # - osx

# script: npx prebuild -t 12.12.0 --arch ia32 -u $PREBUILD_TOKEN


language: node_js
node_js:
  - 14

branches:
  only:
  - master
  
env:
  global:
    - JOBS=4

cache:
  npm: true
  directories:
    - $HOME/.npm/_prebuilds

before_script:
# - if [[ $TRAVIS_OS_NAME == "linux" ]]; then export CXX='g++-4.8'; fi
- git config --global user.name "Thiago Lugli"
- git config --global user.email thiagoelg@gmail.com

script:
  - npm install -g prebuild
  - prebuild --strip --all -r electron --arch ia32 -u $PREBUILD_TOKEN
  - prebuild --strip --all -r electron --arch x64 -u $PREBUILD_TOKEN
  - prebuild --strip --all --arch ia32 -u $PREBUILD_TOKEN
  - prebuild --strip --all --arch x64 -u $PREBUILD_TOKEN

os:
  - linux
  - osx

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - g++-multilib
      - gcc-multilib
      - libcups2-dev
      - libcups2-dev:i386
      - libc6-dev-i386
      - linux-libc-dev 
      - linux-libc-dev:i386